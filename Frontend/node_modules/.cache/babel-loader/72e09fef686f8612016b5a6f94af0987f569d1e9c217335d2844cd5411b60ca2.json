{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\gerenciador_Eventos\\\\Frontend\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/pages/authContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [token, setToken] = useState(null);\n  const login = token => {\n    setAuthenticated(true);\n    setToken(token);\n  };\n  const logout = () => {\n    setAuthenticated(false);\n    setToken(null);\n    localStorage.removeItem('token'); // Limpar o token do localStorage se necessário\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authenticated,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"egysm1QdBau56YRU+0AVuE7bd9w=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authenticated","setAuthenticated","token","setToken","login","logout","localStorage","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/gerenciador_Eventos/Frontend/src/pages/Login/Login.js"],"sourcesContent":["// src/pages/authContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const login = (token) => {\r\n    setAuthenticated(true);\r\n    setToken(token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setAuthenticated(false);\r\n    setToken(null);\r\n    localStorage.removeItem('token'); // Limpar o token do localStorage se necessário\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authenticated, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,KAAK,GAAIF,KAAK,IAAK;IACvBD,gBAAgB,CAAC,IAAI,CAAC;IACtBE,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBJ,gBAAgB,CAAC,KAAK,CAAC;IACvBE,QAAQ,CAAC,IAAI,CAAC;IACdG,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,aAAa;MAAEE,KAAK;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAP,QAAA,EAClEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CApBIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAsBlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}